{"version":3,"file":"evalform.min.js","sources":["../src/evalform.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/.\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle. If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * @package\n * @subpackage organizer\n * @copyright 2020 Thomas Niedermaier (thomas.niedermaier@gmail.com)\n * @license http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n/**\n * In eval form: If group organizer and \"allownewappointments\" is clicked, the hidden field of every group user\n * is synchronized.\n */\n\n\ndefine(\n    ['jquery'], function($) {\n\n        /**\n         * @constructor\n         * @alias module:mod_organizer/evalform\n         */\n        var Evalform = function() {};\n\n        var instance = new Evalform();\n\n        instance.init = function() {\n\n            /**\n             * Display the icon for changed content.\n             * @param {object} e element which has been clicked\n             */\n            function toggleAll(e) {\n                var target = $(e.target);\n                var checked = target.is(':checked');\n                var senderClass = target.attr('class').match(/allow\\d+/g)[0];\n                $('input.' + senderClass).val(checked ? \"1\" : \"0\");\n            }\n\n            $('[name*=allownewappointments]').on('click', toggleAll);\n\n            var container = document.querySelector(\"#organizer_main_cointainer\");\n            var inputs = container.querySelectorAll(\"input, select\");\n            for (const el of inputs) {\n                if (el.type == \"checkbox\") {\n                    el.oldValue = el.checked;\n                } else {\n                    el.oldValue = el.value;\n                }\n            }\n\n            // Declares function and call it directly\n            var setEnabled;\n            (setEnabled = function() {\n                var e = true;\n                for (const el of inputs) {\n                    if (el.type == \"checkbox\") {\n                        if (el.oldValue !== el.checked) {\n                            e = false;\n                            break;\n                        }\n                    } else {\n                        if (el.oldValue !== el.value) {\n                            e = false;\n                            break;\n                        }\n                    }\n                }\n                document.querySelector(\"#id_evalsubmit\").disabled = e;\n            })();\n\n            document.oninput = setEnabled;\n            document.onchange = setEnabled;\n        };\n\n        return instance;\n\n    }\n);\n"],"names":["define","$","instance","init","on","e","target","checked","is","senderClass","attr","match","val","setEnabled","inputs","document","querySelector","querySelectorAll","el","type","oldValue","value","disabled","oninput","onchange"],"mappings":";;;;;;AA4BAA,gCACI,CAAC,WAAW,SAASC,OAQbC,SAAW,IAFA,oBAIfA,SAASC,KAAO,WAaZF,EAAE,gCAAgCG,GAAG,kBAPlBC,OACXC,OAASL,EAAEI,EAAEC,QACbC,QAAUD,OAAOE,GAAG,YACpBC,YAAcH,OAAOI,KAAK,SAASC,MAAM,aAAa,GAC1DV,EAAE,SAAWQ,aAAaG,IAAIL,QAAU,IAAM,YAgB9CM,WAVAC,OADYC,SAASC,cAAc,8BAChBC,iBAAiB,qBACnC,MAAMC,MAAMJ,OACE,YAAXI,GAAGC,KACHD,GAAGE,SAAWF,GAAGX,QAEjBW,GAAGE,SAAWF,GAAGG,OAMxBR,WAAa,eACNR,GAAI,MACH,MAAMa,MAAMJ,UACE,YAAXI,GAAGC,SACCD,GAAGE,WAAaF,GAAGX,QAAS,CAC5BF,GAAI,iBAIJa,GAAGE,WAAaF,GAAGG,MAAO,CAC1BhB,GAAI,QAKhBU,SAASC,cAAc,kBAAkBM,SAAWjB,MAGxDU,SAASQ,QAAUV,WACnBE,SAASS,SAAWX,YAGjBX"}